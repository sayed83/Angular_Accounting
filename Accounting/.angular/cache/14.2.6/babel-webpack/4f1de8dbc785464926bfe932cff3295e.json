{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/inspaction-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction AddEditInspactionComponent_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditInspactionComponent_input_4_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.inspactionTypeId = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.inspactionTypeId);\n  }\n}\n\nfunction AddEditInspactionComponent_select_5_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r8.inspactionTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r8.inspactionName);\n  }\n}\n\nfunction AddEditInspactionComponent_select_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditInspactionComponent_select_5_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.inspactionTypeId = $event);\n    });\n    i0.ɵɵtemplate(1, AddEditInspactionComponent_select_5_option_1_Template, 2, 2, \"option\", 6);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.inspactionTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r1.inspactionTypesList$));\n  }\n}\n\nfunction AddEditInspactionComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const status_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r11.statusOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r11.statusOption);\n  }\n}\n\nfunction AddEditInspactionComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AddEditInspactionComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.addInspaction());\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditInspactionComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AddEditInspactionComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.updateInspaction());\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AddEditInspactionComponent = /*#__PURE__*/(() => {\n  class AddEditInspactionComponent {\n    constructor(service) {\n      this.service = service;\n      this.inspactionId = 0;\n      this.status = \"\";\n      this.comments = \"\";\n    }\n\n    ngOnInit() {\n      this.inspactionId = this.inspaction.inspactionId;\n      this.status = this.inspaction.status;\n      this.comments = this.inspaction.comments;\n      this.inspactionTypeId = this.inspaction.inspactionTypeId;\n      this.inspactionList$ = this.service.getInspactionList();\n      this.statusList$ = this.service.getStatusList();\n      this.inspactionTypesList$ = this.service.getInspactionTypeList();\n    }\n\n    addInspaction() {\n      var inspaction = {\n        status: this.status,\n        comments: this.comments,\n        inspactionTypeId: this.inspactionTypeId\n      };\n      this.service.addInspaction(inspaction).subscribe(res => {\n        var closeModelBtn = document.getElementById('add-edit-modal-close');\n\n        if (closeModelBtn) {\n          closeModelBtn.click();\n        }\n\n        var showAddSuccess = document.getElementById('add-success-alert');\n\n        if (showAddSuccess) {\n          showAddSuccess.style.display = 'block';\n        }\n\n        setTimeout(function () {\n          if (showAddSuccess) {\n            showAddSuccess.style.display = 'none';\n          }\n        }, 4000);\n      });\n    }\n\n    updateInspaction() {\n      var inspaction = {\n        inspactionId: this.inspactionId,\n        status: this.status,\n        comments: this.comments,\n        inspactionTypeId: this.inspactionTypeId\n      };\n      var id = this.inspactionId;\n      this.service.updateInspaction(id, inspaction).subscribe(res => {\n        debugger;\n        var closeModelBtn = document.getElementById('add-edit-modal-close');\n\n        if (closeModelBtn) {\n          closeModelBtn.click();\n        }\n\n        var showUpdateSuccess = document.getElementById('update-success-alert');\n\n        if (showUpdateSuccess) {\n          showUpdateSuccess.style.display = 'block';\n        }\n\n        setTimeout(function () {\n          if (showUpdateSuccess) {\n            showUpdateSuccess.style.display = 'none';\n          }\n        }, 4000);\n      });\n    }\n\n  }\n\n  AddEditInspactionComponent.ɵfac = function AddEditInspactionComponent_Factory(t) {\n    return new (t || AddEditInspactionComponent)(i0.ɵɵdirectiveInject(i1.InspactionApiService));\n  };\n\n  AddEditInspactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditInspactionComponent,\n    selectors: [[\"app-add-edit-inspaction\"]],\n    inputs: {\n      inspaction: \"inspaction\"\n    },\n    decls: 18,\n    vars: 9,\n    consts: [[1, \"mb-3\"], [\"for\", \"inspactionTypeId\", 1, \"form-label\"], [\"type\", \"text\", \"class\", \"form-control\", \"id\", \"inspactionTypeId\", \"name\", \"inspactionTypeId\", \"disabled\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"name\", \"inspactionTypeId\", \"id\", \"inspactionTypeId\", \"class\", \"form-control\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"for\", \"status\", 1, \"form-label\"], [\"name\", \"status\", \"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"comments\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"comments\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-warning\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"id\", \"inspactionTypeId\", \"name\", \"inspactionTypeId\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"inspactionTypeId\", \"id\", \"inspactionTypeId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-warning\", 3, \"click\"]],\n    template: function AddEditInspactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Inspection Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, AddEditInspactionComponent_input_4_Template, 1, 1, \"input\", 2);\n        i0.ɵɵtemplate(5, AddEditInspactionComponent_select_5_Template, 3, 4, \"select\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 0)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditInspactionComponent_Template_select_ngModelChange_9_listener($event) {\n          return ctx.status = $event;\n        });\n        i0.ɵɵtemplate(10, AddEditInspactionComponent_option_10_Template, 2, 2, \"option\", 6);\n        i0.ɵɵpipe(11, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 0)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"comments\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditInspactionComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.comments = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, AddEditInspactionComponent_button_16_Template, 2, 0, \"button\", 9);\n        i0.ɵɵtemplate(17, AddEditInspactionComponent_button_17_Template, 2, 0, \"button\", 10);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.inspaction.inspactionId != 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.inspaction.inspactionId == 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 7, ctx.statusList$));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.comments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.inspaction.inspactionId == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.inspaction.inspactionId != 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.AsyncPipe]\n  });\n  return AddEditInspactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}