{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/inspaction-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction AddEditInspactionComponent_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditInspactionComponent_input_4_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.inspactionTypeId = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.inspactionTypeId);\n  }\n}\n\nfunction AddEditInspactionComponent_select_5_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r8.inspactionTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r8.inspactionName);\n  }\n}\n\nfunction AddEditInspactionComponent_select_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditInspactionComponent_select_5_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.inspactionTypeId = $event);\n    });\n    i0.ɵɵtemplate(1, AddEditInspactionComponent_select_5_option_1_Template, 2, 2, \"option\", 6);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.inspactionTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r1.inspactionTypesList$));\n  }\n}\n\nfunction AddEditInspactionComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const status_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r11.statusOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r11.statusOption);\n  }\n}\n\nfunction AddEditInspactionComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AddEditInspactionComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.addInspaction());\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditInspactionComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AddEditInspactionComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.updateInspaction());\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class AddEditInspactionComponent {\n  constructor(service) {\n    this.service = service;\n    this.inspactionId = 0;\n    this.status = \"\";\n    this.comments = \"\";\n  }\n\n  ngOnInit() {\n    this.inspactionId = this.inspaction.inspactionId;\n    this.status = this.inspaction.status;\n    this.comments = this.inspaction.comments;\n    this.inspactionTypeId = this.inspaction.inspactionTypeId;\n    this.inspactionList$ = this.service.getInspactionList();\n    this.statusList$ = this.service.getStatusList();\n    this.inspactionTypesList$ = this.service.getInspactionTypeList();\n  }\n\n  addInspaction() {\n    var inspaction = {\n      status: this.status,\n      comments: this.comments,\n      inspactionTypeId: this.inspactionTypeId\n    };\n    var inspactionId = this.inspactionId;\n    this.service.updateInspaction(inspactionId, inspaction).subscribe(res => {\n      var closeModelBtn = document.getElementById('add-edit-modal-close');\n\n      if (closeModelBtn) {\n        closeModelBtn.click();\n      }\n\n      var showAddSuccess = document.getElementById('add-success-alert');\n\n      if (showAddSuccess) {\n        showAddSuccess.style.display = 'block';\n      }\n\n      setTimeout(function () {\n        if (showAddSuccess) {\n          showAddSuccess.style.display = 'none';\n        }\n      }, 4000);\n    });\n  }\n\n  updateInspaction() {\n    var inspaction = {\n      inspactionId: this.inspactionId,\n      status: this.status,\n      comments: this.comments,\n      inspactionTypeId: this.inspactionTypeId\n    };\n    this.service.updateInspaction(this.inspactionId, inspaction).subscribe(res => {\n      var closeModelBtn = document.getElementById('add-edit-modal-close');\n\n      if (closeModelBtn) {\n        closeModelBtn.click();\n      }\n\n      var showUpdateSuccess = document.getElementById('update-success-alert');\n\n      if (showUpdateSuccess) {\n        showUpdateSuccess.style.display = 'block';\n      }\n\n      setTimeout(function () {\n        if (showUpdateSuccess) {\n          showUpdateSuccess.style.display = 'none';\n        }\n      }, 4000);\n    });\n  }\n\n}\n\nAddEditInspactionComponent.ɵfac = function AddEditInspactionComponent_Factory(t) {\n  return new (t || AddEditInspactionComponent)(i0.ɵɵdirectiveInject(i1.InspactionApiService));\n};\n\nAddEditInspactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditInspactionComponent,\n  selectors: [[\"app-add-edit-inspaction\"]],\n  inputs: {\n    inspaction: \"inspaction\"\n  },\n  decls: 18,\n  vars: 9,\n  consts: [[1, \"mb-3\"], [\"for\", \"inspactionTypeId\", 1, \"form-label\"], [\"type\", \"text\", \"class\", \"form-control\", \"name\", \"inspactionTypeId\", \"disabled\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"name\", \"inspactionTypeId\", \"id\", \"inspactionTypeId\", \"class\", \"form-control\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"for\", \"status\", 1, \"form-label\"], [\"name\", \"status\", \"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"comments\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"comments\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-warning\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"inspactionTypeId\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"inspactionTypeId\", \"id\", \"inspactionTypeId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-warning\", 3, \"click\"]],\n  template: function AddEditInspactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Inspection Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AddEditInspactionComponent_input_4_Template, 1, 1, \"input\", 2);\n      i0.ɵɵtemplate(5, AddEditInspactionComponent_select_5_Template, 3, 4, \"select\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 0)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEditInspactionComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.status = $event;\n      });\n      i0.ɵɵtemplate(10, AddEditInspactionComponent_option_10_Template, 2, 2, \"option\", 6);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 0)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEditInspactionComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.comments = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, AddEditInspactionComponent_button_16_Template, 2, 0, \"button\", 9);\n      i0.ɵɵtemplate(17, AddEditInspactionComponent_button_17_Template, 2, 0, \"button\", 10);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspaction.inspactionId != 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspaction.inspactionId == 0);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.status);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 7, ctx.statusList$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.comments);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspaction.inspactionId == 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspaction.inspactionId != 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtZWRpdC1pbnNwYWN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AddEditInspactionComponent","constructor","service","ngOnInit","inspactionId","inspaction","status","comments","inspactionTypeId","inspactionList$","getInspactionList","statusList$","getStatusList","inspactionTypesList$","getInspactionTypeList","addInspaction","updateInspaction","subscribe","res","closeModelBtn","document","getElementById","click","showAddSuccess","style","display","setTimeout","showUpdateSuccess","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\add-edit-inspaction\\add-edit-inspaction.component.html","D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\add-edit-inspaction\\add-edit-inspaction.component.ts"],"sourcesContent":["<form >\n  <div class=\"mb-3\">\n    <label for=\"inspactionTypeId\" class=\"form-label\">Inspection Type</label>\n    <input type=\"text\" class=\"form-control\" name=\"inspactionTypeId\" [(ngModel)]=\"inspactionTypeId\" *ngIf=\"inspaction.inspactionId!=0\" disabled>\n    <select name=\"inspactionTypeId\" id=\"inspactionTypeId\" class=\"form-control\" [(ngModel)]=\"inspactionTypeId\" *ngIf=\"inspaction.inspactionId==0\">\n      <option *ngFor=\"let type of inspactionTypesList$|async\" [value]=\"type.inspactionTypeId\">{{type.inspactionName}}</option>\n    </select>\n  </div>\n  <div class=\"mb-3\">\n    <label for=\"status\" class=\"form-label\">Status</label>\n    <select name=\"status\" id=\"status\" class=\"form-control\" [(ngModel)]=\"status\">\n      <option *ngFor=\"let status of statusList$|async\" [value]=\"status.statusOption\">{{status.statusOption}}</option>\n    </select>\n  </div>\n  <div class=\"mb-3\">\n    <label for=\"comments\" class=\"form-label\">comments</label>\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"comments\" name=\"comments\">\n  </div>\n<button (click)=\"addInspaction()\" *ngIf=\"inspaction.inspactionId==0\" class=\"btn btn-primary\">Save</button>\n<button (click)=\"updateInspaction()\" *ngIf=\"inspaction.inspactionId != 0\" class=\"btn btn-warning\">Update</button>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InspactionApiService } from 'src/app/services/inspaction-api.service';\n\n@Component({\n  selector: 'app-add-edit-inspaction',\n  templateUrl: './add-edit-inspaction.component.html',\n  styleUrls: ['./add-edit-inspaction.component.css']\n})\nexport class AddEditInspactionComponent implements OnInit {\n\n  inspactionList$!: Observable<any[]>;\n  statusList$!: Observable<any[]>;\n  inspactionTypesList$!: Observable<any[]>;\n\n  constructor(private service:InspactionApiService) { }\n\n  @Input() inspaction:any;\n  inspactionId: number = 0;\n  status: string = \"\";\n  comments: string = \"\";\n  inspactionTypeId!: number;\n\n  ngOnInit(): void {\n    this.inspactionId = this.inspaction.inspactionId;\n    this.status = this.inspaction.status;\n    this.comments = this.inspaction.comments;\n    this.inspactionTypeId = this.inspaction.inspactionTypeId;\n    this.inspactionList$ = this.service.getInspactionList();\n    this.statusList$ = this.service.getStatusList();\n    this.inspactionTypesList$ = this.service.getInspactionTypeList();\n  }\n\n  addInspaction(){\n    var inspaction = {\n      status:this.status,\n      comments:this.comments,\n      inspactionTypeId:this.inspactionTypeId\n    }\n    var inspactionId:number = this.inspactionId;\n    this.service.updateInspaction(inspactionId,inspaction).subscribe(res => {\n      var closeModelBtn = document.getElementById('add-edit-modal-close');\n      if(closeModelBtn){\n        closeModelBtn.click();\n      }\n\n      var showAddSuccess = document.getElementById('add-success-alert');\n      if(showAddSuccess){\n        showAddSuccess.style.display = 'block';\n      }\n\n      setTimeout(function(){\n        if(showAddSuccess){\n          showAddSuccess.style.display = 'none';\n        }\n      },4000);\n\n    })\n  }\n  updateInspaction(){\n    var inspaction = {\n      inspactionId:this.inspactionId,\n      status:this.status,\n      comments:this.comments,\n      inspactionTypeId:this.inspactionTypeId\n    }\n    this.service.updateInspaction(this.inspactionId,inspaction).subscribe(res => {\n      var closeModelBtn = document.getElementById('add-edit-modal-close');\n      if(closeModelBtn){\n        closeModelBtn.click();\n      }\n\n      var showUpdateSuccess = document.getElementById('update-success-alert');\n      if(showUpdateSuccess){\n        showUpdateSuccess.style.display = 'block';\n      }\n\n      setTimeout(function(){\n        if(showUpdateSuccess){\n          showUpdateSuccess.style.display = 'none';\n        }\n      },4000);\n\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}