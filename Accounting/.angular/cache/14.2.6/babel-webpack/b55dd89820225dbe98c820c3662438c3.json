{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/inspaction-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../add-edit-inspaction/add-edit-inspaction.component\";\n\nfunction ShowInspactionComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ShowInspactionComponent_tr_18_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.modalEdit(item_r3));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(11, \"svg\", 20);\n    i0.ɵɵelement(12, \"path\", 21)(13, \"path\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(14, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ShowInspactionComponent_tr_18_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.delete(item_r3));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(15, \"svg\", 24);\n    i0.ɵɵelement(16, \"path\", 25);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.inspactionId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.inspactionTypesMap.get(item_r3.inspactionTypeId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.comments);\n  }\n}\n\nfunction ShowInspactionComponent_p_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", type_r7.inspactionTypeId, \" - \", type_r7.inspactionName, \"\");\n  }\n}\n\nfunction ShowInspactionComponent_app_add_edit_inspaction_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-edit-inspaction\", 26);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"inspaction\", ctx_r2.inspaction);\n  }\n}\n\nexport let ShowInspactionComponent = /*#__PURE__*/(() => {\n  class ShowInspactionComponent {\n    constructor(service) {\n      this.service = service;\n      this.inspactionTypeList = []; // Map foreign key data\n\n      this.inspactionTypesMap = new Map(); //Variables (properties)\n\n      this.modalTitle = '';\n      this.activatedAddEditInspectionComponent = false;\n    }\n\n    ngOnInit() {\n      this.inspactionList$ = this.service.getInspactionList();\n      this.inspactionTypeList$ = this.service.getInspactionTypeList();\n      this.refreshInspectionTypeMap();\n    }\n\n    modalAdd() {\n      this.inspaction = {\n        inspactionId: 0,\n        status: null,\n        comments: null,\n        inspactionTypeId: null\n      };\n      this.modalTitle = \"Add Inspection\";\n      this.activatedAddEditInspectionComponent = true;\n    }\n\n    modalEdit(item) {\n      this.inspaction = item;\n      this.modalTitle = \"Edit Inspaction\";\n      this.activatedAddEditInspectionComponent = true;\n    }\n\n    delete(item) {\n      if (confirm(`Are you sure you want to delete inspection ${item.inspactionId}`)) {\n        this.service.deleteInspaction(item.inspactionId).subscribe(res => {\n          var closeModelBtn = document.getElementById('add-edit-modal-close');\n\n          if (closeModelBtn) {\n            closeModelBtn.click();\n          }\n\n          var showDeleteSuccess = document.getElementById('delete-success-alert');\n\n          if (showDeleteSuccess) {\n            showDeleteSuccess.style.display = 'block';\n          }\n\n          setTimeout(function () {\n            if (showDeleteSuccess) {\n              showDeleteSuccess.style.display = 'none';\n            }\n          }, 4000);\n          this.inspactionList$ = this.service.getInspactionList();\n        });\n      }\n    }\n\n    modalClose() {\n      this.activatedAddEditInspectionComponent = false;\n      this.inspactionList$ = this.service.getInspactionList();\n    }\n\n    refreshInspectionTypeMap() {\n      this.service.getInspactionTypeList().subscribe(data => {\n        this.inspactionTypeList = data;\n\n        for (let i = 0; i < data.length; i++) {\n          this.inspactionTypesMap.set(this.inspactionTypeList[i].inspactionTypeId, this.inspactionTypeList[i].inspactionName);\n        }\n      });\n    }\n\n  }\n\n  ShowInspactionComponent.ɵfac = function ShowInspactionComponent_Factory(t) {\n    return new (t || ShowInspactionComponent)(i0.ɵɵdirectiveInject(i1.InspactionApiService));\n  };\n\n  ShowInspactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShowInspactionComponent,\n    selectors: [[\"app-show-inspaction\"]],\n    decls: 45,\n    vars: 8,\n    consts: [[1, \"container\", \"pt-5\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"btn\", \"btn-primary\", \"float-end\", 3, \"click\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-secondary\", \"float-end\", \"pt-10\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", \"id\", \"add-success-alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", \"id\", \"update-success-alert\", 1, \"alert\", \"alert-warning\"], [\"role\", \"alert\", \"id\", \"delete-success-alert\", 1, \"alert\", \"alert-danger\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", \"id\", \"add-edit-modal-close\", 1, \"btn-close\", 3, \"click\"], [3, \"inspaction\", 4, \"ngIf\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"btn\", \"btn-outline-primary\", \"me-2\", \"mb-1\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-pencil-square\"], [\"d\", \"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"], [\"fill-rule\", \"evenodd\", \"d\", \"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"], [1, \"btn\", \"btn-outline-danger\", \"me-2\", \"mb-1\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-trash3-fill\"], [\"d\", \"M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z\"], [3, \"inspaction\"]],\n    template: function ShowInspactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ShowInspactionComponent_Template_button_click_1_listener() {\n          return ctx.modalAdd();\n        });\n        i0.ɵɵtext(2, \" Add Inspection \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵtext(4, \" Show Inspection Types \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"table\", 3)(6, \"tbody\")(7, \"th\");\n        i0.ɵɵtext(8, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Inspection Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"comments\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"options\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"tbody\");\n        i0.ɵɵtemplate(18, ShowInspactionComponent_tr_18_Template, 17, 4, \"tr\", 4);\n        i0.ɵɵpipe(19, \"async\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 5);\n        i0.ɵɵtext(21, \" Inspection successfully added!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 6);\n        i0.ɵɵtext(23, \" Inspection successfully updated!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 7);\n        i0.ɵɵtext(25, \" Inspection successfully deleted!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 8)(27, \"div\", 9)(28, \"div\", 10)(29, \"div\", 11)(30, \"h5\", 12);\n        i0.ɵɵtext(31, \"Inspection Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"button\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 14);\n        i0.ɵɵtemplate(34, ShowInspactionComponent_p_34_Template, 2, 2, \"p\", 4);\n        i0.ɵɵpipe(35, \"async\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"div\", 15)(37, \"div\", 9)(38, \"div\", 10)(39, \"div\", 11)(40, \"h1\", 16);\n        i0.ɵɵtext(41);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function ShowInspactionComponent_Template_button_click_42_listener() {\n          return ctx.modalClose();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"div\", 14);\n        i0.ɵɵtemplate(44, ShowInspactionComponent_app_add_edit_inspaction_44_Template, 1, 1, \"app-add-edit-inspaction\", 18);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 4, ctx.inspactionList$));\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(35, 6, ctx.inspactionTypeList$));\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.modalTitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.activatedAddEditInspectionComponent);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.AddEditInspactionComponent, i2.AsyncPipe],\n    styles: [\"#add-success-alert[_ngcontent-%COMP%], #update-success-alert[_ngcontent-%COMP%], #delete-success-alert[_ngcontent-%COMP%]{display:none;animation-name:fadeInAndOut;animation-duration:4s}@keyframes fadeInAndOut{0%{opacity:0}50%{opacity:1}to{opacity:0}}\"]\n  });\n  return ShowInspactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}