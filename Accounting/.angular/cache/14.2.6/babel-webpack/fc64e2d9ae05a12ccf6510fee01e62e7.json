{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/inspaction-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction AddEditInspactionComponent_select_4_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r2.inspactionId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r2.inspactionName);\n  }\n}\n\nfunction AddEditInspactionComponent_select_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditInspactionComponent_select_4_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.inspactionTypeId = $event);\n    });\n    i0.ɵɵtemplate(1, AddEditInspactionComponent_select_4_option_1_Template, 2, 2, \"option\", 4);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.inspactionTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r0.inspactionTypesList$));\n  }\n}\n\nexport class AddEditInspactionComponent {\n  constructor(service) {\n    this.service = service;\n    this.inspactionId = 0;\n    this.status = \"\";\n    this.comments = \"\";\n  }\n\n  ngOnInit() {\n    this.inspactionId = this.inspaction.inspactionId;\n    this.status = this.inspaction.status;\n    this.comments = this.inspaction.comments;\n    this.inspactionTypeId = this.inspaction.inspactionTypeId;\n    this.inspactionList$ = this.service.getInspactionList();\n    this.statusList$ = this.service.getStatusList();\n    this.inspactionTypesList$ = this.service.getInspactionTypeList();\n  }\n\n}\n\nAddEditInspactionComponent.ɵfac = function AddEditInspactionComponent_Factory(t) {\n  return new (t || AddEditInspactionComponent)(i0.ɵɵdirectiveInject(i1.InspactionApiService));\n};\n\nAddEditInspactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditInspactionComponent,\n  selectors: [[\"app-add-edit-inspaction\"]],\n  inputs: {\n    inspaction: \"inspaction\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"mb-3\"], [\"for\", \"inspactionTypeId\", 1, \"form-label\"], [\"name\", \"inspactionTypeId\", \"id\", \"inspactionTypeId\", \"class\", \"form-control\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"name\", \"inspactionTypeId\", \"id\", \"inspactionTypeId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function AddEditInspactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Inspection Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AddEditInspactionComponent_select_4_Template, 3, 4, \"select\", 2);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspaction.inspactionId == 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtZWRpdC1pbnNwYWN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAIMA;IAAoFA;IAAuBA;;;;;IAAnDA;IAA4BA;IAAAA;;;;;;;;IADtFA;IAA2EA;MAAAA;MAAA;MAAA;IAAA;IACzEA;;IACFA;;;;;IAF2EA;IAChDA;IAAAA;;;;ACK/B,OAAM,MAAOC,0BAAP,CAAiC;EAMrCC,YAAoBC,OAApB,EAAgD;IAA5B;IAGpB,oBAAuB,CAAvB;IACA,cAAiB,EAAjB;IACA,gBAAmB,EAAnB;EALqD;;EAQrDC,QAAQ;IACN,KAAKC,YAAL,GAAoB,KAAKC,UAAL,CAAgBD,YAApC;IACA,KAAKE,MAAL,GAAc,KAAKD,UAAL,CAAgBC,MAA9B;IACA,KAAKC,QAAL,GAAgB,KAAKF,UAAL,CAAgBE,QAAhC;IACA,KAAKC,gBAAL,GAAwB,KAAKH,UAAL,CAAgBG,gBAAxC;IACA,KAAKC,eAAL,GAAuB,KAAKP,OAAL,CAAaQ,iBAAb,EAAvB;IACA,KAAKC,WAAL,GAAmB,KAAKT,OAAL,CAAaU,aAAb,EAAnB;IACA,KAAKC,oBAAL,GAA4B,KAAKX,OAAL,CAAaY,qBAAb,EAA5B;EACD;;AAtBoC;;;mBAA1Bd,4BAA0BD;AAAA;;;QAA1BC;EAA0Be;EAAAC;IAAAX;EAAA;EAAAY;EAAAC;EAAAC;EAAAC;IAAA;MDTvCrB,6BAAO,CAAP,EAAO,KAAP,EAAO,CAAP,EAAO,CAAP,EAAO,OAAP,EAAO,CAAP;MAEqDA;MAAeA;MAChEA;MAGFA;;;;MAH6GA;MAAAA","names":["i0","AddEditInspactionComponent","constructor","service","ngOnInit","inspactionId","inspaction","status","comments","inspactionTypeId","inspactionList$","getInspactionList","statusList$","getStatusList","inspactionTypesList$","getInspactionTypeList","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\add-edit-inspaction\\add-edit-inspaction.component.html","D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\add-edit-inspaction\\add-edit-inspaction.component.ts"],"sourcesContent":["<form >\n  <div class=\"mb-3\">\n    <label for=\"inspactionTypeId\" class=\"form-label\">Inspection Type</label>\n    <select name=\"inspactionTypeId\" id=\"inspactionTypeId\" class=\"form-control\" [(ngModel)]=\"inspactionTypeId\" *ngIf=\"inspaction.inspactionId==0\">\n      <option *ngFor=\"let type of inspactionTypesList$|async\" [value]=\"type.inspactionId\">{{type.inspactionName}}</option>\n    </select>\n  </div>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InspactionApiService } from 'src/app/services/inspaction-api.service';\n\n@Component({\n  selector: 'app-add-edit-inspaction',\n  templateUrl: './add-edit-inspaction.component.html',\n  styleUrls: ['./add-edit-inspaction.component.css']\n})\nexport class AddEditInspactionComponent implements OnInit {\n\n  inspactionList$!: Observable<any[]>;\n  statusList$!: Observable<any[]>;\n  inspactionTypesList$!: Observable<any[]>;\n\n  constructor(private service:InspactionApiService) { }\n\n  @Input() inspaction:any;\n  inspactionId: number = 0;\n  status: string = \"\";\n  comments: string = \"\";\n  inspactionTypeId!: number;\n\n  ngOnInit(): void {\n    this.inspactionId = this.inspaction.inspactionId;\n    this.status = this.inspaction.status;\n    this.comments = this.inspaction.comments;\n    this.inspactionTypeId = this.inspaction.inspactionTypeId;\n    this.inspactionList$ = this.service.getInspactionList();\n    this.statusList$ = this.service.getStatusList();\n    this.inspactionTypesList$ = this.service.getInspactionTypeList();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}