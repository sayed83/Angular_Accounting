{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/inspaction-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../add-edit-inspaction/add-edit-inspaction.component\";\n\nfunction ShowInspactionComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ShowInspactionComponent_tr_18_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.modalEdit(item_r3));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(11, \"svg\", 20);\n    i0.ɵɵelement(12, \"path\", 21)(13, \"path\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(14, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ShowInspactionComponent_tr_18_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.delete(item_r3));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(15, \"svg\", 24);\n    i0.ɵɵelement(16, \"path\", 25);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.inspactionId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.inspactionTypesMap.get(item_r3.inspactionTypeId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.comments);\n  }\n}\n\nfunction ShowInspactionComponent_p_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", type_r7.inspactionTypeId, \" - \", type_r7.inspactionName, \"\");\n  }\n}\n\nfunction ShowInspactionComponent_app_add_edit_inspaction_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-edit-inspaction\", 26);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"inspaction\", ctx_r2.inspaction);\n  }\n}\n\nexport class ShowInspactionComponent {\n  constructor(service) {\n    this.service = service;\n    this.inspactionTypeList = []; // Map foreign key data\n\n    this.inspactionTypesMap = new Map(); //Variables (properties)\n\n    this.modalTitle = '';\n    this.activatedAddEditInspectionComponent = false;\n  }\n\n  ngOnInit() {\n    this.inspactionList$ = this.service.getInspactionList();\n    this.inspactionTypeList$ = this.service.getInspactionTypeList();\n    this.refreshInspectionTypeMap();\n  }\n\n  modalAdd() {\n    this.inspaction = {\n      inspactionId: 0,\n      status: null,\n      comments: null,\n      inspactionTypeId: null\n    };\n    this.modalTitle = \"Add Inspection\";\n    this.activatedAddEditInspectionComponent = true;\n  }\n\n  modalEdit(item) {\n    this.inspaction = item;\n    this.modalTitle = \"Edit Inspaction\";\n    this.activatedAddEditInspectionComponent = true;\n  }\n\n  delete(item) {\n    if (confirm(`Are you sure you want to delete inspection ${item.inspactionId}`)) {\n      this.service.deleteInspaction(item.inspactionId).subscribe(res => {\n        var closeModelBtn = document.getElementById('add-edit-modal-close');\n\n        if (closeModelBtn) {\n          closeModelBtn.click();\n        }\n\n        var showUpdateSuccess = document.getElementById('update-success-alert');\n\n        if (showUpdateSuccess) {\n          showUpdateSuccess.style.display = 'block';\n        }\n\n        setTimeout(function () {\n          if (showUpdateSuccess) {\n            showUpdateSuccess.style.display = 'none';\n          }\n        }, 4000);\n      });\n    }\n  }\n\n  modalClose() {\n    this.activatedAddEditInspectionComponent = false;\n    this.inspactionList$ = this.service.getInspactionList();\n  }\n\n  refreshInspectionTypeMap() {\n    this.service.getInspactionTypeList().subscribe(data => {\n      this.inspactionTypeList = data;\n\n      for (let i = 0; i < data.length; i++) {\n        this.inspactionTypesMap.set(this.inspactionTypeList[i].inspactionTypeId, this.inspactionTypeList[i].inspactionName);\n      }\n    });\n  }\n\n}\n\nShowInspactionComponent.ɵfac = function ShowInspactionComponent_Factory(t) {\n  return new (t || ShowInspactionComponent)(i0.ɵɵdirectiveInject(i1.InspactionApiService));\n};\n\nShowInspactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowInspactionComponent,\n  selectors: [[\"app-show-inspaction\"]],\n  decls: 45,\n  vars: 8,\n  consts: [[1, \"container\", \"pt-5\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"btn\", \"btn-primary\", \"float-end\", 3, \"click\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-secondary\", \"float-end\", \"pt-10\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", \"id\", \"add-success-alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", \"id\", \"update-success-alert\", 1, \"alert\", \"alert-warning\"], [\"role\", \"alert\", \"id\", \"delete-success-alert\", 1, \"alert\", \"alert-danger\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", \"id\", \"add-edit-modal-close\", 1, \"btn-close\", 3, \"click\"], [3, \"inspaction\", 4, \"ngIf\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"btn\", \"btn-outline-primary\", \"me-2\", \"mb-1\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-pencil-square\"], [\"d\", \"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"], [\"fill-rule\", \"evenodd\", \"d\", \"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"], [1, \"btn\", \"btn-outline-danger\", \"me-2\", \"mb-1\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-trash3-fill\"], [\"d\", \"M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z\"], [3, \"inspaction\"]],\n  template: function ShowInspactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ShowInspactionComponent_Template_button_click_1_listener() {\n        return ctx.modalAdd();\n      });\n      i0.ɵɵtext(2, \" Add Inspection \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵtext(4, \" Show Inspection Types \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"table\", 3)(6, \"tbody\")(7, \"th\");\n      i0.ɵɵtext(8, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Inspection Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"options\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"tbody\");\n      i0.ɵɵtemplate(18, ShowInspactionComponent_tr_18_Template, 17, 4, \"tr\", 4);\n      i0.ɵɵpipe(19, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 5);\n      i0.ɵɵtext(21, \" Inspection successfully added!\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 6);\n      i0.ɵɵtext(23, \" Inspection successfully updated!\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 7);\n      i0.ɵɵtext(25, \" Inspection successfully deleted!\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 8)(27, \"div\", 9)(28, \"div\", 10)(29, \"div\", 11)(30, \"h5\", 12);\n      i0.ɵɵtext(31, \"Inspection Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"button\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 14);\n      i0.ɵɵtemplate(34, ShowInspactionComponent_p_34_Template, 2, 2, \"p\", 4);\n      i0.ɵɵpipe(35, \"async\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(36, \"div\", 15)(37, \"div\", 9)(38, \"div\", 10)(39, \"div\", 11)(40, \"h1\", 16);\n      i0.ɵɵtext(41);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function ShowInspactionComponent_Template_button_click_42_listener() {\n        return ctx.modalClose();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 14);\n      i0.ɵɵtemplate(44, ShowInspactionComponent_app_add_edit_inspaction_44_Template, 1, 1, \"app-add-edit-inspaction\", 18);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 4, ctx.inspactionList$));\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(35, 6, ctx.inspactionTypeList$));\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.modalTitle);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.activatedAddEditInspectionComponent);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.AddEditInspactionComponent, i2.AsyncPipe],\n  styles: [\"#add-success-alert[_ngcontent-%COMP%], #update-success-alert[_ngcontent-%COMP%], #delete-success-alert[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n  animation-name: fadeInAndOut;\\r\\n  animation-duration: 4s;\\r\\n}\\r\\n\\r\\n@keyframes fadeInAndOut {\\r\\n  0% {opacity: 0;}\\r\\n  50% {opacity: 1;}\\r\\n  100% {opacity: 0;}\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3ctaW5zcGFjdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7RUFHRSxhQUFhO0VBTWIsNEJBQTRCO0VBQzVCLHNCQUFzQjtBQU54Qjs7QUFlQTtFQUNFLElBQUksVUFBVSxDQUFDO0VBQ2YsS0FBSyxVQUFVLENBQUM7RUFDaEIsTUFBTSxVQUFVLENBQUM7QUFDbkIiLCJmaWxlIjoic2hvdy1pbnNwYWN0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjYWRkLXN1Y2Nlc3MtYWxlcnQsXHJcbiN1cGRhdGUtc3VjY2Vzcy1hbGVydCxcclxuI2RlbGV0ZS1zdWNjZXNzLWFsZXJ0IHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4jYWRkLXN1Y2Nlc3MtYWxlcnQsXHJcbiN1cGRhdGUtc3VjY2Vzcy1hbGVydCxcclxuI2RlbGV0ZS1zdWNjZXNzLWFsZXJ0IHtcclxuICBhbmltYXRpb24tbmFtZTogZmFkZUluQW5kT3V0O1xyXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogNHM7XHJcbn1cclxuXHJcbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlSW5BbmRPdXQge1xyXG4gIDAlIHtvcGFjaXR5OiAwO31cclxuICA1MCUge29wYWNpdHk6IDE7fVxyXG4gIDEwMCUge29wYWNpdHk6IDA7fVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVJbkFuZE91dCB7XHJcbiAgMCUge29wYWNpdHk6IDA7fVxyXG4gIDUwJSB7b3BhY2l0eTogMTt9XHJcbiAgMTAwJSB7b3BhY2l0eTogMDt9XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ShowInspactionComponent","constructor","service","Map","ngOnInit","inspactionList$","getInspactionList","inspactionTypeList$","getInspactionTypeList","refreshInspectionTypeMap","modalAdd","inspaction","inspactionId","status","comments","inspactionTypeId","modalTitle","activatedAddEditInspectionComponent","modalEdit","item","delete","confirm","deleteInspaction","subscribe","res","closeModelBtn","document","getElementById","click","showUpdateSuccess","style","display","setTimeout","modalClose","data","inspactionTypeList","i","length","inspactionTypesMap","set","inspactionName","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\show-inspaction\\show-inspaction.component.html","D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\show-inspaction\\show-inspaction.component.ts"],"sourcesContent":["\n<div class=\"container pt-5\">\n  <!-- Button Add Inspaction  trigger modal -->\n  <button type=\"button\" class=\"btn btn-primary float-end\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\"\n  (click)=\"modalAdd()\"\n  >\n    Add Inspection\n  </button>\n\n  <!-- Button Inspaction Type trigger modal -->\n  <button type=\"button\" class=\"btn btn-secondary float-end pt-10\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n      Show Inspection Types\n    </button>\n\n  <table class=\"table table-striped\">\n      <tbody>\n          <th>Id</th>\n          <th>Inspection Type</th>\n          <th>Status</th>\n          <th>comments</th>\n          <th>options</th>\n      </tbody>\n      <tbody>\n          <tr *ngFor=\"let item of inspactionList$ | async\">\n              <td>{{item.inspactionId}}</td>\n              <td>{{inspactionTypesMap.get(item.inspactionTypeId)}}</td>\n              <td>{{item.status}}</td>\n              <td>{{item.comments}}</td>\n              <td>\n                <button class=\"btn btn-outline-primary me-2 mb-1\" (click)=\"modalEdit(item)\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n                  </svg>\n                </button>\n                <button class=\"btn btn-outline-danger me-2 mb-1\" (click)=\"delete(item)\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash3-fill\" viewBox=\"0 0 16 16\">\n                    <path d=\"M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z\"/>\n                  </svg>\n                </button>\n              </td>\n          </tr>\n      </tbody>\n  </table>\n</div>\n\n<div class=\"alert alert-success\" role=\"alert\" id=\"add-success-alert\">\n  Inspection successfully added!\n</div>\n\n<div class=\"alert alert-warning\" role=\"alert\" id=\"update-success-alert\">\n  Inspection successfully updated!\n</div>\n\n<div class=\"alert alert-danger\" role=\"alert\" id=\"delete-success-alert\">\n  Inspection successfully deleted!\n</div>\n\n  <!-- Add Inspaction Type Modal -->\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Inspection Type</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <p *ngFor=\"let type of inspactionTypeList$|async\">{{type.inspactionTypeId}} - {{type.inspactionName}}</p>\n        </div>\n        <!-- <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n        </div> -->\n      </div>\n    </div>\n  </div>\n\n<!-- Add Or Edit Inspaction Modal -->\n<div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">{{modalTitle}}</h1>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\n        (click)=\"modalClose()\" id=\"add-edit-modal-close\"\n        ></button>\n      </div>\n      <div class=\"modal-body\">\n        <app-add-edit-inspaction [inspaction]=\"inspaction\" *ngIf=\"activatedAddEditInspectionComponent\"></app-add-edit-inspaction>\n      </div>\n      <!-- <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\">Understood</button>\n      </div> -->\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InspactionApiService } from 'src/app/services/inspaction-api.service';\n\n@Component({\n  selector: 'app-show-inspaction',\n  templateUrl: './show-inspaction.component.html',\n  styleUrls: ['./show-inspaction.component.css']\n})\nexport class ShowInspactionComponent implements OnInit {\n\n  inspactionList$!:Observable<any[]>;\n  inspactionTypeList$!:Observable<any[]>;\n  inspactionTypeList: any = [];\n\n  // Map foreign key data\n  inspactionTypesMap:Map<number,string> = new Map();\n\n  constructor(private service:InspactionApiService) { }\n\n  ngOnInit(): void {\n    this.inspactionList$ = this.service.getInspactionList();\n    this.inspactionTypeList$ = this.service.getInspactionTypeList();\n    this.refreshInspectionTypeMap();\n  }\n\n  //Variables (properties)\n  modalTitle:string = '';\n  activatedAddEditInspectionComponent:boolean = false;\n  inspaction:any;\n\n  modalAdd(){\n    this.inspaction = {\n      inspactionId:0,\n      status:null,\n      comments:null,\n      inspactionTypeId:null\n    }\n    this.modalTitle = \"Add Inspection\";\n    this.activatedAddEditInspectionComponent = true;\n  }\n\n  modalEdit(item:any){\n    this.inspaction = item;\n    this.modalTitle = \"Edit Inspaction\"\n    this.activatedAddEditInspectionComponent = true;\n  }\n\n  delete(item:any){\n    if(confirm(`Are you sure you want to delete inspection ${item.inspactionId}`)){\n      this.service.deleteInspaction(item.inspactionId).subscribe(res => {\n        var closeModelBtn = document.getElementById('add-edit-modal-close');\n        if(closeModelBtn){\n          closeModelBtn.click();\n        }\n\n        var showUpdateSuccess = document.getElementById('update-success-alert');\n        if(showUpdateSuccess){\n          showUpdateSuccess.style.display = 'block';\n        }\n\n        setTimeout(function(){\n          if(showUpdateSuccess){\n            showUpdateSuccess.style.display = 'none';\n          }\n        },4000);\n      })\n    }\n  }\n\n  modalClose(){\n    this.activatedAddEditInspectionComponent =false;\n    this.inspactionList$ = this.service.getInspactionList();\n  }\n  refreshInspectionTypeMap(){\n    this.service.getInspactionTypeList().subscribe(data =>{\n      this.inspactionTypeList = data;\n\n      for(let i = 0; i <data.length; i++){\n        this.inspactionTypesMap.set(this.inspactionTypeList[i].inspactionTypeId,this.inspactionTypeList[i].inspactionName)\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}