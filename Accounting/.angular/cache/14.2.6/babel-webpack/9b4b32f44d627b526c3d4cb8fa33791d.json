{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/inspaction-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../add-edit-inspaction/add-edit-inspaction.component\";\n\nfunction ShowInspactionComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.inspactionId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.inspactionTypesMap.get(item_r3.inspactionTypeId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.comments);\n  }\n}\n\nfunction ShowInspactionComponent_p_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", type_r4.inspactionTypeId, \" - \", type_r4.inspactionName, \"\");\n  }\n}\n\nfunction ShowInspactionComponent_app_add_edit_inspaction_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-edit-inspaction\", 19);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"inspaction\", ctx_r2.inspaction);\n  }\n}\n\nexport class ShowInspactionComponent {\n  constructor(service) {\n    this.service = service;\n    this.inspactionTypeList = []; // Map foreign key data\n\n    this.inspactionTypesMap = new Map(); //Variables (properties)\n\n    this.modalTitle = '';\n    this.activatedAddEditInspectionComponent = false;\n  }\n\n  ngOnInit() {\n    this.inspactionList$ = this.service.getInspactionList();\n    this.inspactionTypeList$ = this.service.getInspactionTypeList();\n    this.refreshInspectionTypeMap();\n  }\n\n  modalAdd() {\n    this.inspaction = {\n      inspactionId: 0,\n      status: null,\n      comments: null,\n      inspactionTypeId: null\n    };\n    this.modalTitle = \"Add Inspection\";\n    this.activatedAddEditInspectionComponent = true;\n  }\n\n  modalClose() {\n    this.activatedAddEditInspectionComponent = false;\n    this.inspactionList$ = this.service.getInspactionList();\n  }\n\n  refreshInspectionTypeMap() {\n    this.service.getInspactionTypeList().subscribe(data => {\n      this.inspactionTypeList = data;\n\n      for (let i = 0; i < data.length; i++) {\n        this.inspactionTypesMap.set(this.inspactionTypeList[i].inspactionTypeId, this.inspactionTypeList[i].inspactionName);\n      }\n    });\n  }\n\n}\n\nShowInspactionComponent.ɵfac = function ShowInspactionComponent_Factory(t) {\n  return new (t || ShowInspactionComponent)(i0.ɵɵdirectiveInject(i1.InspactionApiService));\n};\n\nShowInspactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowInspactionComponent,\n  selectors: [[\"app-show-inspaction\"]],\n  decls: 43,\n  vars: 8,\n  consts: [[1, \"container\", \"pt-5\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"btn\", \"btn-primary\", \"float-end\", 3, \"click\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-secondary\", \"float-end\", \"pt-10\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", \"id\", \"add-success-alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", \"id\", \"update-success-alert\", 1, \"alert\", \"alert-warning\"], [\"role\", \"alert\", \"id\", \"delete-success-alert\", 1, \"alert\", \"alert-danger\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", \"id\", \"add-edit-modal-close\", 1, \"btn-close\", 3, \"click\"], [3, \"inspaction\", 4, \"ngIf\"], [3, \"inspaction\"]],\n  template: function ShowInspactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ShowInspactionComponent_Template_button_click_1_listener() {\n        return ctx.modalAdd();\n      });\n      i0.ɵɵtext(2, \" Add Inspection \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵtext(4, \" Show Inspection Types \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"table\", 3)(6, \"tbody\")(7, \"th\");\n      i0.ɵɵtext(8, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Inspection Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"comments\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, ShowInspactionComponent_tr_16_Template, 9, 4, \"tr\", 4);\n      i0.ɵɵpipe(17, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 5);\n      i0.ɵɵtext(19, \" Inspection successfully added!\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 6);\n      i0.ɵɵtext(21, \" Inspection successfully updated!\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 7);\n      i0.ɵɵtext(23, \" Inspection successfully deleted!\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 8)(25, \"div\", 9)(26, \"div\", 10)(27, \"div\", 11)(28, \"h5\", 12);\n      i0.ɵɵtext(29, \"Inspection Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"button\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 14);\n      i0.ɵɵtemplate(32, ShowInspactionComponent_p_32_Template, 2, 2, \"p\", 4);\n      i0.ɵɵpipe(33, \"async\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(34, \"div\", 15)(35, \"div\", 9)(36, \"div\", 10)(37, \"div\", 11)(38, \"h1\", 16);\n      i0.ɵɵtext(39);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function ShowInspactionComponent_Template_button_click_40_listener() {\n        return ctx.modalClose();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 14);\n      i0.ɵɵtemplate(42, ShowInspactionComponent_app_add_edit_inspaction_42_Template, 1, 1, \"app-add-edit-inspaction\", 18);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(17, 4, ctx.inspactionList$));\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(33, 6, ctx.inspactionTypeList$));\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.modalTitle);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.activatedAddEditInspectionComponent);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.AddEditInspactionComponent, i2.AsyncPipe],\n  styles: [\"#add-success-alert[_ngcontent-%COMP%], #update-success-alert[_ngcontent-%COMP%], #delete-success-alert[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n  animation-name: fadeInAndOut;\\r\\n  animation-duration: 4s;\\r\\n}\\r\\n\\r\\n@keyframes fadeInAndOut {\\r\\n  0% {opacity: 0;}\\r\\n  50% {opacity: 1;}\\r\\n  100% {opacity: 0;}\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3ctaW5zcGFjdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7RUFHRSxhQUFhO0VBTWIsNEJBQTRCO0VBQzVCLHNCQUFzQjtBQU54Qjs7QUFTQTtFQUNFLElBQUksVUFBVSxDQUFDO0VBQ2YsS0FBSyxVQUFVLENBQUM7RUFDaEIsTUFBTSxVQUFVLENBQUM7QUFDbkIiLCJmaWxlIjoic2hvdy1pbnNwYWN0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjYWRkLXN1Y2Nlc3MtYWxlcnQsXHJcbiN1cGRhdGUtc3VjY2Vzcy1hbGVydCxcclxuI2RlbGV0ZS1zdWNjZXNzLWFsZXJ0IHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4jYWRkLXN1Y2Nlc3MtYWxlcnQsXHJcbiN1cGRhdGUtc3VjY2Vzcy1hbGVydCxcclxuI2RlbGV0ZS1zdWNjZXNzLWFsZXJ0IHtcclxuICBhbmltYXRpb24tbmFtZTogZmFkZUluQW5kT3V0O1xyXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogNHM7XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgZmFkZUluQW5kT3V0IHtcclxuICAwJSB7b3BhY2l0eTogMDt9XHJcbiAgNTAlIHtvcGFjaXR5OiAxO31cclxuICAxMDAlIHtvcGFjaXR5OiAwO31cclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAsBUA,2BAAiD,CAAjD,EAAiD,IAAjD;IACQA;IAAqBA;IACzBA;IAAIA;IAAiDA;IACrDA;IAAIA;IAAeA;IACnBA;IAAIA;IAAiBA;;;;;;IAHjBA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;;;;;;IA2BRA;IAAkDA;IAAmDA;;;;;IAAnDA;IAAAA;;;;;;IAqBpDA;;;;;IAAyBA;;;;ACjEjC,OAAM,MAAOC,uBAAP,CAA8B;EASlCC,YAAoBC,OAApB,EAAgD;IAA5B;IALpB,0BAA0B,EAA1B,CAKgD,CAHhD;;IACA,0BAAwC,IAAIC,GAAJ,EAAxC,CAEgD,CAQhD;;IACA,kBAAoB,EAApB;IACA,2CAA8C,KAA9C;EAVqD;;EAErDC,QAAQ;IACN,KAAKC,eAAL,GAAuB,KAAKH,OAAL,CAAaI,iBAAb,EAAvB;IACA,KAAKC,mBAAL,GAA2B,KAAKL,OAAL,CAAaM,qBAAb,EAA3B;IACA,KAAKC,wBAAL;EACD;;EAODC,QAAQ;IACN,KAAKC,UAAL,GAAkB;MAChBC,YAAY,EAAC,CADG;MAEhBC,MAAM,EAAC,IAFS;MAGhBC,QAAQ,EAAC,IAHO;MAIhBC,gBAAgB,EAAC;IAJD,CAAlB;IAMA,KAAKC,UAAL,GAAkB,gBAAlB;IACA,KAAKC,mCAAL,GAA2C,IAA3C;EACD;;EAEDC,UAAU;IACR,KAAKD,mCAAL,GAA0C,KAA1C;IACA,KAAKZ,eAAL,GAAuB,KAAKH,OAAL,CAAaI,iBAAb,EAAvB;EACD;;EACDG,wBAAwB;IACtB,KAAKP,OAAL,CAAaM,qBAAb,GAAqCW,SAArC,CAA+CC,IAAI,IAAG;MACpD,KAAKC,kBAAL,GAA0BD,IAA1B;;MAEA,KAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEF,IAAI,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;QACjC,KAAKE,kBAAL,CAAwBC,GAAxB,CAA4B,KAAKJ,kBAAL,CAAwBC,CAAxB,EAA2BP,gBAAvD,EAAwE,KAAKM,kBAAL,CAAwBC,CAAxB,EAA2BI,cAAnG;MACD;IACF,CAND;EAOD;;AA7CiC;;;mBAAvB1B,yBAAuBD;AAAA;;;QAAvBC;EAAuB2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRpChC,+BAA4B,CAA5B,EAA4B,QAA5B,EAA4B,CAA5B;MAGEA;QAAA,OAASiC,cAAT;MAAmB,CAAnB;MAEEjC;MACFA;MAGAA;MACIA;MACFA;MAEFA,iCAAmC,CAAnC,EAAmC,OAAnC,EAAmC,CAAnC,EAAmC,IAAnC;MAEYA;MAAEA;MACNA;MAAIA;MAAeA;MACnBA;MAAIA;MAAMA;MACVA;MAAIA;MAAQA;MAEhBA;MACIA;;MAMJA;MAINA;MACEA;MACFA;MAEAA;MACEA;MACFA;MAEAA;MACEA;MACFA;MAGEA,gCAA+G,EAA/G,EAA+G,KAA/G,EAA+G,CAA/G,EAA+G,EAA/G,EAA+G,KAA/G,EAA+G,EAA/G,EAA+G,EAA/G,EAA+G,KAA/G,EAA+G,EAA/G,EAA+G,EAA/G,EAA+G,IAA/G,EAA+G,EAA/G;MAIuDA;MAAeA;MAC9DA;MACFA;MACAA;MACEA;;MACFA;MAURA,iCAAsK,EAAtK,EAAsK,KAAtK,EAAsK,CAAtK,EAAsK,EAAtK,EAAsK,KAAtK,EAAsK,EAAtK,EAAsK,EAAtK,EAAsK,KAAtK,EAAsK,EAAtK,EAAsK,EAAtK,EAAsK,IAAtK,EAAsK,EAAtK;MAI8DA;MAAcA;MACpEA;MACAA;QAAA,OAASiC,gBAAT;MAAqB,CAArB;MACCjC;MAEHA;MACEA;MACFA;;;;MArDyBA;MAAAA;MA+BDA;MAAAA;MAegCA;MAAAA;MAMFA;MAAAA","names":["i0","ShowInspactionComponent","constructor","service","Map","ngOnInit","inspactionList$","getInspactionList","inspactionTypeList$","getInspactionTypeList","refreshInspectionTypeMap","modalAdd","inspaction","inspactionId","status","comments","inspactionTypeId","modalTitle","activatedAddEditInspectionComponent","modalClose","subscribe","data","inspactionTypeList","i","length","inspactionTypesMap","set","inspactionName","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\show-inspaction\\show-inspaction.component.html","D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\show-inspaction\\show-inspaction.component.ts"],"sourcesContent":["\n<div class=\"container pt-5\">\n  <!-- Button Add Inspaction  trigger modal -->\n  <button type=\"button\" class=\"btn btn-primary float-end\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\"\n  (click)=\"modalAdd()\"\n  >\n    Add Inspection\n  </button>\n\n  <!-- Button Inspaction Type trigger modal -->\n  <button type=\"button\" class=\"btn btn-secondary float-end pt-10\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n      Show Inspection Types\n    </button>\n\n  <table class=\"table table-striped\">\n      <tbody>\n          <th>Id</th>\n          <th>Inspection Type</th>\n          <th>Status</th>\n          <th>comments</th>\n      </tbody>\n      <tbody>\n          <tr *ngFor=\"let item of inspactionList$ | async\">\n              <td>{{item.inspactionId}}</td>\n              <td>{{inspactionTypesMap.get(item.inspactionTypeId)}}</td>\n              <td>{{item.status}}</td>\n              <td>{{item.comments}}</td>\n          </tr>\n      </tbody>\n  </table>\n</div>\n\n<div class=\"alert alert-success\" role=\"alert\" id=\"add-success-alert\">\n  Inspection successfully added!\n</div>\n\n<div class=\"alert alert-warning\" role=\"alert\" id=\"update-success-alert\">\n  Inspection successfully updated!\n</div>\n\n<div class=\"alert alert-danger\" role=\"alert\" id=\"delete-success-alert\">\n  Inspection successfully deleted!\n</div>\n\n  <!-- Add Inspaction Type Modal -->\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Inspection Type</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <p *ngFor=\"let type of inspactionTypeList$|async\">{{type.inspactionTypeId}} - {{type.inspactionName}}</p>\n        </div>\n        <!-- <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n        </div> -->\n      </div>\n    </div>\n  </div>\n\n<!-- Add Inspaction Modal -->\n<div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">{{modalTitle}}</h1>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\n        (click)=\"modalClose()\" id=\"add-edit-modal-close\"\n        ></button>\n      </div>\n      <div class=\"modal-body\">\n        <app-add-edit-inspaction [inspaction]=\"inspaction\" *ngIf=\"activatedAddEditInspectionComponent\"></app-add-edit-inspaction>\n      </div>\n      <!-- <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\">Understood</button>\n      </div> -->\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InspactionApiService } from 'src/app/services/inspaction-api.service';\n\n@Component({\n  selector: 'app-show-inspaction',\n  templateUrl: './show-inspaction.component.html',\n  styleUrls: ['./show-inspaction.component.css']\n})\nexport class ShowInspactionComponent implements OnInit {\n\n  inspactionList$!:Observable<any[]>;\n  inspactionTypeList$!:Observable<any[]>;\n  inspactionTypeList: any = [];\n\n  // Map foreign key data\n  inspactionTypesMap:Map<number,string> = new Map();\n\n  constructor(private service:InspactionApiService) { }\n\n  ngOnInit(): void {\n    this.inspactionList$ = this.service.getInspactionList();\n    this.inspactionTypeList$ = this.service.getInspactionTypeList();\n    this.refreshInspectionTypeMap();\n  }\n\n  //Variables (properties)\n  modalTitle:string = '';\n  activatedAddEditInspectionComponent:boolean = false;\n  inspaction:any;\n\n  modalAdd(){\n    this.inspaction = {\n      inspactionId:0,\n      status:null,\n      comments:null,\n      inspactionTypeId:null\n    }\n    this.modalTitle = \"Add Inspection\";\n    this.activatedAddEditInspectionComponent = true;\n  }\n\n  modalClose(){\n    this.activatedAddEditInspectionComponent =false;\n    this.inspactionList$ = this.service.getInspactionList();\n  }\n  refreshInspectionTypeMap(){\n    this.service.getInspactionTypeList().subscribe(data =>{\n      this.inspactionTypeList = data;\n\n      for(let i = 0; i <data.length; i++){\n        this.inspactionTypesMap.set(this.inspactionTypeList[i].inspactionTypeId,this.inspactionTypeList[i].inspactionName)\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}