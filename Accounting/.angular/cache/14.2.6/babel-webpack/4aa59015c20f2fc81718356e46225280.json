{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/inspaction-api.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ShowInspactionComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.inspactionId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.inspactionTypesMap.get(item_r2.inspactionTypeId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.comments);\n  }\n}\n\nfunction ShowInspactionComponent_p_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", type_r3.inspactionTypeId, \" - \", type_r3.inspactionName, \"\");\n  }\n}\n\nexport class ShowInspactionComponent {\n  constructor(service) {\n    this.service = service;\n    this.inspactionTypeList = []; // Map foreign key data\n\n    this.inspactionTypesMap = new Map();\n  }\n\n  ngOnInit() {\n    this.inspactionList$ = this.service.getInspactionList();\n    this.inspactionTypeList$ = this.service.getInspactionTypeList();\n    this.refreshInspectionTypeMap();\n  }\n\n  refreshInspectionTypeMap() {\n    this.service.getInspactionTypeList().subscribe(data => {\n      this.inspactionTypeList = data;\n\n      for (let i = 0; i < data.length; i++) {\n        this.inspactionTypesMap.set(this.inspactionTypeList[i].inspactionTypeId, this.inspactionTypeList[i].inspactionName);\n      }\n    });\n  }\n\n}\n\nShowInspactionComponent.ɵfac = function ShowInspactionComponent_Factory(t) {\n  return new (t || ShowInspactionComponent)(i0.ɵɵdirectiveInject(i1.InspactionApiService));\n};\n\nShowInspactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowInspactionComponent,\n  selectors: [[\"app-show-inspaction\"]],\n  decls: 41,\n  vars: 6,\n  consts: [[\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"btn\", \"btn-primary\", \"float-end\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-secondary\", \"float-end\", \"pt-10\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\", \"fs-5\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"]],\n  template: function ShowInspactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \" Add Inspection\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵtext(3, \" Show Inspaction Types \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 2)(5, \"tbody\")(6, \"th\");\n      i0.ɵɵtext(7, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Inspaction Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"comments\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, ShowInspactionComponent_tr_15_Template, 9, 4, \"tr\", 3);\n      i0.ɵɵpipe(16, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"div\", 5)(19, \"div\", 6)(20, \"div\", 7)(21, \"h5\", 8);\n      i0.ɵɵtext(22, \"Inspaction Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 10);\n      i0.ɵɵtemplate(25, ShowInspactionComponent_p_25_Template, 2, 2, \"p\", 3);\n      i0.ɵɵpipe(26, \"async\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(27, \"div\", 11)(28, \"div\", 5)(29, \"div\", 6)(30, \"div\", 7)(31, \"h1\", 12);\n      i0.ɵɵtext(32, \"Modal title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 10);\n      i0.ɵɵtext(35, \" ... \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 13)(37, \"button\", 14);\n      i0.ɵɵtext(38, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 15);\n      i0.ɵɵtext(40, \"Understood\");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(16, 2, ctx.inspactionList$));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(26, 4, ctx.inspactionTypeList$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG93LWluc3BhY3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;IAkBQA,2BAAiD,CAAjD,EAAiD,IAAjD;IACQA;IAAqBA;IACzBA;IAAIA;IAAiDA;IACrDA;IAAIA;IAAeA;IACnBA;IAAIA;IAAiBA;;;;;;IAHjBA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;;;;;;IAiBNA;IAAkDA;IAAmDA;;;;;IAAnDA;IAAAA;;;;AC9B5D,OAAM,MAAOC,uBAAP,CAA8B;EASlCC,YAAoBC,OAApB,EAAgD;IAA5B;IALpB,0BAA0B,EAA1B,CAKgD,CAHhD;;IACA,0BAAwC,IAAIC,GAAJ,EAAxC;EAEqD;;EAErDC,QAAQ;IACN,KAAKC,eAAL,GAAuB,KAAKH,OAAL,CAAaI,iBAAb,EAAvB;IACA,KAAKC,mBAAL,GAA2B,KAAKL,OAAL,CAAaM,qBAAb,EAA3B;IACA,KAAKC,wBAAL;EACD;;EAEDA,wBAAwB;IACtB,KAAKP,OAAL,CAAaM,qBAAb,GAAqCE,SAArC,CAA+CC,IAAI,IAAG;MACpD,KAAKC,kBAAL,GAA0BD,IAA1B;;MAEA,KAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEF,IAAI,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;QACjC,KAAKE,kBAAL,CAAwBC,GAAxB,CAA4B,KAAKJ,kBAAL,CAAwBC,CAAxB,EAA2BI,gBAAvD,EAAwE,KAAKL,kBAAL,CAAwBC,CAAxB,EAA2BK,cAAnG;MACD;IACF,CAND;EAOD;;AAzBiC;;;mBAAvBlB,yBAAuBD;AAAA;;;QAAvBC;EAAuBmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRpCxB;MACEA;MACFA;MAGAA;MACIA;MACFA;MAEFA,iCAAmC,CAAnC,EAAmC,OAAnC,EAAmC,CAAnC,EAAmC,IAAnC;MAEYA;MAAEA;MACNA;MAAIA;MAAeA;MACnBA;MAAIA;MAAMA;MACVA;MAAIA;MAAQA;MAEhBA;MACIA;;MAMJA;MAOFA,gCAA+G,EAA/G,EAA+G,KAA/G,EAA+G,CAA/G,EAA+G,EAA/G,EAA+G,KAA/G,EAA+G,CAA/G,EAA+G,EAA/G,EAA+G,KAA/G,EAA+G,CAA/G,EAA+G,EAA/G,EAA+G,IAA/G,EAA+G,CAA/G;MAIuDA;MAAeA;MAC9DA;MACFA;MACAA;MACEA;;MACFA;MAURA,iCAAsK,EAAtK,EAAsK,KAAtK,EAAsK,CAAtK,EAAsK,EAAtK,EAAsK,KAAtK,EAAsK,CAAtK,EAAsK,EAAtK,EAAsK,KAAtK,EAAsK,CAAtK,EAAsK,EAAtK,EAAsK,IAAtK,EAAsK,EAAtK;MAI8DA;MAAWA;MACjEA;MACFA;MACAA;MACEA;MACFA;MACAA,iCAA0B,EAA1B,EAA0B,QAA1B,EAA0B,EAA1B;MAC0EA;MAAKA;MAC7EA;MAA8CA;MAAUA;;;;MA5CnCA;MAAAA;MAqBCA;MAAAA","names":["i0","ShowInspactionComponent","constructor","service","Map","ngOnInit","inspactionList$","getInspactionList","inspactionTypeList$","getInspactionTypeList","refreshInspectionTypeMap","subscribe","data","inspactionTypeList","i","length","inspactionTypesMap","set","inspactionTypeId","inspactionName","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\show-inspaction\\show-inspaction.component.html","D:\\sayed\\OTHER FILE\\MY PROJECT\\Angular\\Accounting\\src\\app\\components\\inspaction\\show-inspaction\\show-inspaction.component.ts"],"sourcesContent":["<!-- Button Add Inspaction  trigger modal -->\n<button type=\"button\" class=\"btn btn-primary float-end\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">\n  Add Inspection\n</button>\n\n<!-- Button Inspaction Type trigger modal -->\n<button type=\"button\" class=\"btn btn-secondary float-end pt-10\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n    Show Inspaction Types\n  </button>\n\n<table class=\"table table-striped\">\n    <tbody>\n        <th>Id</th>\n        <th>Inspaction Type</th>\n        <th>Status</th>\n        <th>comments</th>\n    </tbody>\n    <tbody>\n        <tr *ngFor=\"let item of inspactionList$ | async\">\n            <td>{{item.inspactionId}}</td>\n            <td>{{inspactionTypesMap.get(item.inspactionTypeId)}}</td>\n            <td>{{item.status}}</td>\n            <td>{{item.comments}}</td>\n        </tr>\n    </tbody>\n</table>\n\n\n\n\n  <!-- Add Inspaction Type Modal -->\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Inspaction Type</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <p *ngFor=\"let type of inspactionTypeList$|async\">{{type.inspactionTypeId}} - {{type.inspactionName}}</p>\n        </div>\n        <!-- <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n        </div> -->\n      </div>\n    </div>\n  </div>\n\n<!-- Add Inspaction Modal -->\n<div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Modal title</h1>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        ...\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\">Understood</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InspactionApiService } from 'src/app/services/inspaction-api.service';\n\n@Component({\n  selector: 'app-show-inspaction',\n  templateUrl: './show-inspaction.component.html',\n  styleUrls: ['./show-inspaction.component.css']\n})\nexport class ShowInspactionComponent implements OnInit {\n\n  inspactionList$!:Observable<any[]>;\n  inspactionTypeList$!:Observable<any[]>;\n  inspactionTypeList: any = [];\n\n  // Map foreign key data\n  inspactionTypesMap:Map<number,string> = new Map();\n\n  constructor(private service:InspactionApiService) { }\n\n  ngOnInit(): void {\n    this.inspactionList$ = this.service.getInspactionList();\n    this.inspactionTypeList$ = this.service.getInspactionTypeList();\n    this.refreshInspectionTypeMap();\n  }\n\n  refreshInspectionTypeMap(){\n    this.service.getInspactionTypeList().subscribe(data =>{\n      this.inspactionTypeList = data;\n\n      for(let i = 0; i <data.length; i++){\n        this.inspactionTypesMap.set(this.inspactionTypeList[i].inspactionTypeId,this.inspactionTypeList[i].inspactionName)\n      }\n    })\n  } \n}\n"]},"metadata":{},"sourceType":"module"}